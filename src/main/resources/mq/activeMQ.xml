<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:task="http://www.springframework.org/schema/task"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:amq="http://activemq.apache.org/schema/core"
xmlns:jms="http://www.springframework.org/schema/jms"
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.1.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-4.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/jms
http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
http://activemq.apache.org/schema/core
http://activemq.apache.org/schema/core/activemq-core-5.14.5.xsd
"> 

	<!-- ================spring start扫描============== -->
	<!-- 自动扫描跳过控制层 -->
	<context:component-scan base-package="ch.*">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
	</context:component-scan> 

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:config.properties"/>

	<!--连接 active mq-->
	<amq:connectionFactory id="amqConnectionFactory" brokerURL="${activemq.url}" userName="${activemq.username}"
						   password="${activemq.password}"/>

	<!--采用连接池的方式-->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="amqConnectionFactory"/>
		<property name="sessionCacheSize" value="100"/>
	</bean>

	<!--定义消息队列的topic类型 queue的方式差不多,消息的类别,物理上不同的类别,是分开存储的-->
	<bean id="topic" class="org.apache.activemq.command.ActiveMQTempTopic">
		<!-- 定义名称 -->
		<constructor-arg index="0" value="topic"/>
	</bean>

	<!--配置JMS模板(topic),Spring提供的JMS工具类,它发送/接收消息-->
	<!-- 为了测试发送消息，保留jmsTemplate的配置，实际不存在发送，只需要配置监听即可 -->
	<!-- 定义JmsTemplate的Topic类型 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
		<!-- 非pub/sub模型（发布/订阅），true为topic,false为queue ，即队列模式  -->
		<property name="pubSubDomain" value="true"/>
		<property name="defaultDestination" ref="topicDestination" />
	</bean>

	<!-- Queue类型 -->
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<constructor-arg ref="connectionFactory"></constructor-arg>
		<!-- 非pub/sub模型（发布/订阅），即队列模式 -->
		<property name="pubSubDomain" value="false" />
		<property name="defaultDestination" ref="queueDestination" />
	</bean>


	<bean id="queueSender" class="ch.common.mq.QueueSender"/>
	<bean id="topicSender" class="ch.common.mq.TopicSender"/>



	<!-- 监听方式，这种方式更实用，可以一直监听消息 -->
	<bean id="queueReceiver1"
		  class="ch.common.mq.QueueReceiver1"></bean>
	<bean id="queueReceiver2"
		  class="ch.common.mq.QueueReceiver2"></bean>
	<bean id="topicReceiver1"
		  class="ch.common.mq.TopicReceiver1"></bean>
	<bean id="topicReceiver2"
		  class="ch.common.mq.TopicReceiver2"></bean>



	<!-- 消息消费者 start -->
	<!-- 定义Queue监听器容器 -->
	<jms:listener-container destination-type="queue"
							container-type="default" connection-factory="connectionFactory"
							acknowledge="auto">
		<jms:listener destination="queue" ref="queueReceiver1" />
		<jms:listener destination="queue" ref="queueReceiver2" />
	</jms:listener-container>
	<!-- 定义Topic监听器容器 -->
	<jms:listener-container destination-type="topic"
							container-type="default" connection-factory="connectionFactory"
							acknowledge="auto">
		<jms:listener destination="topic" ref="topicReceiver1" />
		<jms:listener destination="topic" ref="topicReceiver2" />
	</jms:listener-container>
	<!-- 消息消费者 end -->

	<!-- 定义队列目的地 ，点对点 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queue</value>
		</constructor-arg>
	</bean>
	<!-- 定义主题目的地 -->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg>
			<value>topic</value>
		</constructor-arg>
	</bean>



</beans>