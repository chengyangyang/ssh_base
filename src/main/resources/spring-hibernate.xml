<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.1.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
"> 


            
	<!-- ================spring start扫描============== -->
	<!-- 自动扫描跳过控制层 -->
	<context:component-scan base-package="ch.*">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
	</context:component-scan> 
	<!-- ================spring end扫描============== -->
	
	<!-- ================spring 整合hibernate start ============== -->
	
	<context:property-placeholder location="classpath:/config.properties" />
	
	<!--配置数据源-->
	
	
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.username}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
      <!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${hibernate.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${hibernate.maxPoolSize}" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${hibernate.initialPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${hibernate.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${hibernate.acquireIncrement}" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。 
			所以设置这个参数需要考虑到多方面的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<property name="maxStatements" value="${hibernate.maxStatements}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${hibernate.idleConnectionTestPeriod}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${hibernate.acquireRetryAttempts}" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="${hibernate.breakAfterAcquireFailure}" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="${hibernate.testConnectionOnCheckout}" />
    </bean>
    
    <!--配置session工厂-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="ch.*" /><!-- packagesToScan搜索所有标注了Entity的Class -->
        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			</props>
        </property>
    </bean>
     
    <!-- 事物管理器配置  -->
   <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
   <property name="sessionFactory" ref="sessionFactory" /> 
    </bean> 
    
   <!-- 定义事务 -->  
  <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">   -->
      <!--  propagation="REQUIRED" 如果存在一个事务，则加入到当前事务中  只读是指，只计算当前事务开始的时候的时间-->
     <!-- <tx:attributes>  
            <tx:method name="test*" propagation="REQUIRED"  read-only="false" />  
        	<tx:method name="get*"  propagation="REQUIRED" /> 
        </tx:attributes>  
    </tx:advice>   -->
    <!-- 定义切面 -->  
  <!-- <aop:config proxy-target-class="true">  
        <aop:pointcut id="pt" expression="execution(* com.ch.*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt" />  
    </aop:config>  -->
    
    <!-- 注解实现事务 -->  
     <!--  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />   -->
 
 	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- jdbc Template -->
	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
</beans>