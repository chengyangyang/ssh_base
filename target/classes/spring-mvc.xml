<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
           ">
          
	
	<!-- springmvc 的配置文件，包含网页的跳转逻辑控制 -->
	<context:component-scan base-package="ch.*" use-default-filters="false">
	<!--  只扫描控制器-->
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
	</context:component-scan> 
	<!--  配置视图解析器 ，方便页面返回-->
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	 <property name="prefix" value="/WEB-INF/views/"></property>
	 <property name="suffix" value=".jsp"></property>
	 
	 </bean>



	<bean id="systemConstantsFront" class="com.trm.constants.SystemConstants">
		<property name="redis_ip" value="${redis_ip}"/>
		<property name="redis_port" value="${redis_port}" />
	</bean>

	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<bean class="com.trm.annotation.LoginInterceptor"/>
		<mvc:interceptor>
			<!-- 拦截器拦截的URL格式 -->
			<mvc:mapping path="/order/**" />
			<mvc:mapping path="/cash/**" />
			<mvc:mapping path="/organ/**" />
			<!-- 处理拦截的具体实现类 -->
			<bean class="com.trm.annotation.ReferTokenInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.trm.annotation.LogInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 以下为SpringMVC配置 -->
	<mvc:annotation-driven>
		<!-- 返回json数据，@response使用 -->
		<mvc:message-converters register-defaults="true">
			<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>

			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="-1" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到XXX页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">index.jsp</prop>
			</props>
		</property>
	</bean>







	 <!-- 两个标配 -->
	 <!--将springMVC不能处理的资源交给Tomcat  -->
	 <mvc:default-servlet-handler/>
	 <!-- 能支持spring更高级的应用 ，如校验..映射动态请求,启用MVC注解-->
	 <mvc:annotation-driven/>
	
	 <!--这里是对静态资源的映射,不会被Spring MVC拦截-->
    <mvc:resources mapping="/js/**" location="/resources/js/" />
    <mvc:resources mapping="/css/**" location="/resources/css/" />
    <mvc:resources mapping="/img/**" location="/resources/img/" />
	
	 <!-- 启用注解式事务 必须要这里启用，如果放在applicationContext.xml中的话不生效-->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--**************************************读取文件end ************************************** -->
	<import resource="classpath:spring/spring-hibernate.xml" />
	<import resource="classpath:dozer/spring-dozer.xml" />
	<import resource="classpath:webservice/spring-cxf-service_client_*.xml" />

	</beans>